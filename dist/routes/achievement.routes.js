"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const auth_middleware_1 = require("../middlewares/auth.middleware");
const achievement_controller_1 = require("../controllers/achievement.controller");
const adminMiddleware_1 = require("../middlewares/adminMiddleware");
const router = express_1.default.Router();
router.get("/", auth_middleware_1.authMiddleware, achievement_controller_1.getAchievements);
router.get("/locked", auth_middleware_1.authMiddleware, achievement_controller_1.getLockedAchievements);
router.get("/user", auth_middleware_1.authMiddleware, achievement_controller_1.getUserAchievements);
router.post("/unlock", auth_middleware_1.authMiddleware, achievement_controller_1.unlockAchievement);
router.post("/", auth_middleware_1.authMiddleware, achievement_controller_1.createAchievement);
router.put("/", auth_middleware_1.authMiddleware, adminMiddleware_1.adminMiddleware, achievement_controller_1.updateAchievement);
router.delete("/", auth_middleware_1.authMiddleware, adminMiddleware_1.adminMiddleware, achievement_controller_1.deleteAchievement);
router.get("/unlocked", auth_middleware_1.authMiddleware, achievement_controller_1.getUnLockedAchievements);
router.post("/unlockFamilyAchievement", auth_middleware_1.authMiddleware, achievement_controller_1.unlockFamilyAchievement);
router.get("/lastUnlocked", auth_middleware_1.authMiddleware, achievement_controller_1.getLastUnlockedAchievement);
router.post("/lastFamilyUnlocked", auth_middleware_1.authMiddleware, achievement_controller_1.getLastFamilyUnlockedAchievement);
exports.default = router;
