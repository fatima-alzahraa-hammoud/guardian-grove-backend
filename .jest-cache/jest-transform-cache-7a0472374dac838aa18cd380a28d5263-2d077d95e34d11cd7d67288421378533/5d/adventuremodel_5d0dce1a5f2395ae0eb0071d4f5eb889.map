{"file":"C:\\Users\\USER\\Desktop\\guardian-grove\\guardian-grove-backend\\src\\models\\adventure.model.ts","mappings":";;;AAAA,uCAAyC;AAIzC,MAAM,eAAe,GAAG,IAAI,iBAAM,CAAa;IAC3C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvC,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACzC,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE;IACzD,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE;CAC5D,CAAC,CAAC;AAEH,MAAM,eAAe,GAAG,IAAI,iBAAM,CAAa;IAC3C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvC,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7C,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;IAC1D,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE;IACzD,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE;IAC5C,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAC;IACjG,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,eAAe,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;CACvE,CAAC,CAAC;AAEU,QAAA,SAAS,GAAG,IAAA,gBAAK,EAAa,WAAW,EAAE,eAAe,CAAC,CAAC","names":[],"sources":["C:\\Users\\USER\\Desktop\\guardian-grove\\guardian-grove-backend\\src\\models\\adventure.model.ts"],"sourcesContent":["import { model, Schema } from \"mongoose\";\r\nimport { IChallenge } from \"../interfaces/IChallenge\";\r\nimport { IAdventure } from \"../interfaces/IAdventure\";\r\n\r\nconst challengeSchema = new Schema<IChallenge>({\r\n    title: { type: String, required: true },\r\n    content: { type: String, required: true },\r\n    starsReward: { type: Number, required: true, default: 2 },\r\n    coinsReward: { type: Number, required: true, default: 1 },\r\n});\r\n\r\nconst adventureSchema = new Schema<IAdventure>({\r\n    title: { type: String, required: true },\r\n    description: { type: String, required: true },\r\n    starsReward: { type: Number, required: true, default: 10 },\r\n    coinsReward: { type: Number, required: true, default: 5 },\r\n    startDate: { type: Date, default: Date.now },\r\n    endDate: { type: Date, required: true, default: () => new Date(Date.now() + 24 * 60 * 60 * 1000)},\r\n    challenges: { type: [challengeSchema], required: true, default: [] },\r\n});\r\n\r\nexport const Adventure = model<IAdventure>(\"Adventure\", adventureSchema);"],"version":3}