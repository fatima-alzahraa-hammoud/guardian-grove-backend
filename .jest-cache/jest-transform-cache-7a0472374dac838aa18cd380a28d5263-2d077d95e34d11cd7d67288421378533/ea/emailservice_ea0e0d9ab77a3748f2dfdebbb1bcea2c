647f8cf91bbe00e601f9eff43c7b5ce9
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "sendMail", {
    enumerable: true,
    get: function() {
        return sendMail;
    }
});
const _nodemailer = /*#__PURE__*/ _interop_require_default(require("nodemailer"));
const _winston = /*#__PURE__*/ _interop_require_default(require("winston"));
const _dotenv = /*#__PURE__*/ _interop_require_default(require("dotenv"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
_dotenv.default.config();
const logger = _winston.default.createLogger({
    level: 'debug',
    format: _winston.default.format.json(),
    transports: [
        new _winston.default.transports.Console()
    ]
});
const sendMail = async (from, to, subject, html)=>{
    const transporter = _nodemailer.default.createTransport({
        service: process.env.MAIL_HOST,
        auth: {
            user: process.env.EMAIL_USERNAME,
            pass: process.env.EMAIL_PASSWORD
        }
    });
    const mailOptions = {
        from: from,
        to: to,
        subject: subject,
        html: html
    };
    logger.info(`Sending mail to - ${to}`);
    transporter.sendMail(mailOptions, (error, info)=>{
        if (error) {
            logger.error(error);
        } else {
            logger.info('Email sent: ' + info.response);
        }
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcZ3VhcmRpYW4tZ3JvdmVcXGd1YXJkaWFuLWdyb3ZlLWJhY2tlbmRcXHNyY1xcc2VydmljZXNcXGVtYWlsLnNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG5vZGVtYWlsZXIgZnJvbSAnbm9kZW1haWxlcic7XHJcbmltcG9ydCB3aW5zdG9uIGZyb20gJ3dpbnN0b24nO1xyXG5pbXBvcnQgZG90ZW52IGZyb20gXCJkb3RlbnZcIjtcclxuZG90ZW52LmNvbmZpZygpO1xyXG5cclxuY29uc3QgbG9nZ2VyID0gd2luc3Rvbi5jcmVhdGVMb2dnZXIoe1xyXG4gICAgbGV2ZWw6ICdkZWJ1ZycsXHJcbiAgICBmb3JtYXQ6IHdpbnN0b24uZm9ybWF0Lmpzb24oKSxcclxuICAgIHRyYW5zcG9ydHM6IFtuZXcgd2luc3Rvbi50cmFuc3BvcnRzLkNvbnNvbGUoKV1cclxufSk7XHJcblxyXG5leHBvcnQgY29uc3Qgc2VuZE1haWwgPSBhc3luYyAoZnJvbTogc3RyaW5nLCB0bzogc3RyaW5nLCBzdWJqZWN0OiBzdHJpbmcsIGh0bWw6IHN0cmluZykgPT4ge1xyXG4gICAgY29uc3QgdHJhbnNwb3J0ZXIgPSBub2RlbWFpbGVyLmNyZWF0ZVRyYW5zcG9ydCh7XHJcbiAgICAgICAgc2VydmljZTogcHJvY2Vzcy5lbnYuTUFJTF9IT1NULFxyXG4gICAgICAgIGF1dGg6IHtcclxuICAgICAgICAgICAgdXNlcjogcHJvY2Vzcy5lbnYuRU1BSUxfVVNFUk5BTUUsXHJcbiAgICAgICAgICAgIHBhc3M6IHByb2Nlc3MuZW52LkVNQUlMX1BBU1NXT1JEXHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgbWFpbE9wdGlvbnMgPSB7XHJcbiAgICAgICAgZnJvbTogZnJvbSxcclxuICAgICAgICB0bzogdG8sXHJcbiAgICAgICAgc3ViamVjdDogc3ViamVjdCxcclxuICAgICAgICBodG1sOiBodG1sXHJcbiAgICB9O1xyXG5cclxuICAgIGxvZ2dlci5pbmZvKGBTZW5kaW5nIG1haWwgdG8gLSAke3RvfWApO1xyXG4gICAgdHJhbnNwb3J0ZXIuc2VuZE1haWwobWFpbE9wdGlvbnMsIChlcnJvciwgaW5mbyk9PiB7XHJcbiAgICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgICAgIGxvZ2dlci5lcnJvcihlcnJvcik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbG9nZ2VyLmluZm8oJ0VtYWlsIHNlbnQ6ICcgKyBpbmZvLnJlc3BvbnNlKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG4iXSwibmFtZXMiOlsic2VuZE1haWwiLCJkb3RlbnYiLCJjb25maWciLCJsb2dnZXIiLCJ3aW5zdG9uIiwiY3JlYXRlTG9nZ2VyIiwibGV2ZWwiLCJmb3JtYXQiLCJqc29uIiwidHJhbnNwb3J0cyIsIkNvbnNvbGUiLCJmcm9tIiwidG8iLCJzdWJqZWN0IiwiaHRtbCIsInRyYW5zcG9ydGVyIiwibm9kZW1haWxlciIsImNyZWF0ZVRyYW5zcG9ydCIsInNlcnZpY2UiLCJwcm9jZXNzIiwiZW52IiwiTUFJTF9IT1NUIiwiYXV0aCIsInVzZXIiLCJFTUFJTF9VU0VSTkFNRSIsInBhc3MiLCJFTUFJTF9QQVNTV09SRCIsIm1haWxPcHRpb25zIiwiaW5mbyIsImVycm9yIiwicmVzcG9uc2UiXSwibWFwcGluZ3MiOiI7Ozs7K0JBV2FBOzs7ZUFBQUE7OzttRUFYVTtnRUFDSDsrREFDRDs7Ozs7O0FBQ25CQyxlQUFNLENBQUNDLE1BQU07QUFFYixNQUFNQyxTQUFTQyxnQkFBTyxDQUFDQyxZQUFZLENBQUM7SUFDaENDLE9BQU87SUFDUEMsUUFBUUgsZ0JBQU8sQ0FBQ0csTUFBTSxDQUFDQyxJQUFJO0lBQzNCQyxZQUFZO1FBQUMsSUFBSUwsZ0JBQU8sQ0FBQ0ssVUFBVSxDQUFDQyxPQUFPO0tBQUc7QUFDbEQ7QUFFTyxNQUFNVixXQUFXLE9BQU9XLE1BQWNDLElBQVlDLFNBQWlCQztJQUN0RSxNQUFNQyxjQUFjQyxtQkFBVSxDQUFDQyxlQUFlLENBQUM7UUFDM0NDLFNBQVNDLFFBQVFDLEdBQUcsQ0FBQ0MsU0FBUztRQUM5QkMsTUFBTTtZQUNGQyxNQUFNSixRQUFRQyxHQUFHLENBQUNJLGNBQWM7WUFDaENDLE1BQU1OLFFBQVFDLEdBQUcsQ0FBQ00sY0FBYztRQUNwQztJQUNKO0lBRUEsTUFBTUMsY0FBYztRQUNoQmhCLE1BQU1BO1FBQ05DLElBQUlBO1FBQ0pDLFNBQVNBO1FBQ1RDLE1BQU1BO0lBQ1Y7SUFFQVgsT0FBT3lCLElBQUksQ0FBQyxDQUFDLGtCQUFrQixFQUFFaEIsSUFBSTtJQUNyQ0csWUFBWWYsUUFBUSxDQUFDMkIsYUFBYSxDQUFDRSxPQUFPRDtRQUN0QyxJQUFJQyxPQUFPO1lBQ1AxQixPQUFPMEIsS0FBSyxDQUFDQTtRQUNqQixPQUFPO1lBQ0gxQixPQUFPeUIsSUFBSSxDQUFDLGlCQUFpQkEsS0FBS0UsUUFBUTtRQUM5QztJQUNKO0FBQ0oifQ==