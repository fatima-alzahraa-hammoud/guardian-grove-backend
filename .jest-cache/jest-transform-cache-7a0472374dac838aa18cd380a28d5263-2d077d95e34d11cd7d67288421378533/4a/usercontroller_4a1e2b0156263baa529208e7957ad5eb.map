{"file":"C:\\Users\\USER\\Desktop\\guardian-grove\\guardian-grove-backend\\src\\controllers\\user.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\USER\\Desktop\\guardian-grove\\guardian-grove-backend\\src\\controllers\\user.controller.ts"],"sourcesContent":["import { Request, Response } from 'express';\r\nimport bcrypt from \"bcrypt\";\r\nimport { User } from \"../models/user.model\";\r\nimport { throwError } from '../utils/error';\r\nimport { CustomRequest } from '../interfaces/customRequest';\r\nimport { checkId } from '../utils/checkId';\r\nimport { Adventure } from '../models/adventure.model';\r\nimport { IAdventureProgress } from '../interfaces/IAdventureProgress';\r\nimport { Family } from '../models/family.model';\r\nimport { recalculateFamilyMemberRanks } from '../utils/recalculateFamilyMemberRanks';\r\nimport nodemailer from \"nodemailer\";\r\nimport { sendMail } from '../services/email.service';\r\nimport { generateSecurePassword } from '../utils/generateSecurePassword';\r\n\r\n// API to get all users\r\nexport const getUsers = async(req: Request, res: Response): Promise<void> => {\r\n    try{\r\n        const users = await User.find();\r\n        res.status(200).send(users);\r\n    }catch(error){\r\n        return throwError({ message: \"Error retrieving users\", res, status: 500});\r\n    }\r\n};\r\n\r\n// API to get a user based on his Id\r\nexport const getUserById = async (req: CustomRequest, res: Response): Promise<void> => {\r\n    try {\r\n        const { userId } = req.body;\r\n\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401 });\r\n        }\r\n\r\n        const targetUserId = userId || req.user._id;\r\n\r\n        if (!checkId({ id: targetUserId, res })) return;\r\n\r\n        let projection = '_id name email birthday role avatar gender stars coins interests nbOfTasksCompleted rankInFamily memberSince familyId dailyMessage isTempPassword';  // Basic user info\r\n\r\n        // Fetch the user with specific fields\r\n        const user = await User.findById(targetUserId).select(projection);\r\n\r\n        // If user not found, return 404\r\n        if (!user) {\r\n            return throwError({ message: \"User not found\", res, status: 404 });\r\n        }\r\n\r\n        if (req.user._id.toString() !== targetUserId.toString() && ['parent', 'child'].includes(req.user.role) && req.user.email != user.email){\r\n            return throwError({ message: \"Forbidden\", res, status: 403 });\r\n        }\r\n\r\n        res.status(200).json({ message: \"Retrieving user successfully\", user });\r\n    } catch (error) {\r\n        return throwError({ message: \"Error retrieving user\", res, status: 500 });\r\n    }\r\n};\r\n\r\n// API to create user\r\nexport const createUser = async (req: CustomRequest, res: Response): Promise<void> => {\r\n    try{\r\n        const data = req.body;\r\n\r\n        const { name, birthday, gender, role, avatar, interests } = data;\r\n\r\n        if (!req.user) {\r\n            return  throwError({ message: \"Unauthorized\", res, status: 401 });\r\n        }\r\n        if(req.user.role === \"child\"){\r\n            return throwError({ message: \"Forbidden\", res, status: 403 });\r\n        }\r\n\r\n        // verify all fields are filled\r\n        if (!name || !birthday || !gender || !role || !avatar || !interests) {\r\n            return throwError({ message: \"All required fields must be filled.\", res, status: 400});\r\n        }\r\n\r\n        const email = req.user.email;\r\n\r\n        const existingUser = await User.findOne({\r\n            name: name,\r\n            email: email   \r\n        });\r\n        if (existingUser) {\r\n            return throwError({ message: \"This username is already taken for this email.\", res, status: 409});\r\n        }\r\n\r\n        if (!Array.isArray(interests)) {\r\n            return throwError({ message: \"Interests must be an array.\", res, status: 400 });\r\n        }\r\n\r\n        // Gender Validation\r\n        const validGenders = ['male', 'female'];\r\n        if (!validGenders.includes(gender)) {\r\n            return throwError({ message: \"Gender must be either 'male' or 'female'.\", res, status: 400});\r\n        }\r\n\r\n        // Role validation\r\n        const validRoles = ['owner', 'parent', 'child', 'admin'];\r\n        if (!validRoles.includes(role)) {\r\n            return throwError({ message: \"Invalid role.\", res, status: 400});\r\n        }\r\n\r\n        // Birthday Validation\r\n        if (isNaN(new Date(birthday).getTime())) {\r\n            return throwError({ message: \"Invalid birthday format.\", res, status: 400 });\r\n        }\r\n\r\n        const generatedPassword = generateSecurePassword();\r\n        const hashedPassword = await bcrypt.hash(generatedPassword, 12);\r\n        \r\n        // Find the parent's family\r\n        const family = await Family.findOne({ email: req.user.email });\r\n        if (!family) {\r\n            return throwError({ message: \"Family not found.\", res, status: 404 });\r\n        }\r\n\r\n        // Create the user with the parent's familyId\r\n        const user = await User.create({\r\n            ...data,\r\n            email: email,\r\n            password: hashedPassword,\r\n            familyId: family._id  // Link to parent's family\r\n        });\r\n\r\n        // Add the new user to the family's members list\r\n        if (!family.members.includes(user.id)) {\r\n            family.members.push({_id: user.id, role, name, gender, avatar});\r\n            await family.save();\r\n        }\r\n\r\n        // Recalculate the ranks after adding the new user\r\n        await recalculateFamilyMemberRanks(family._id, user);\r\n\r\n        const from: string = `\"Guardian Grove\" <${process.env.EMAIL_USERNAME}>`;\r\n        const to: string = email;\r\n        const subject = `Welcome to Guardian Grove - ${name}'s Account Details`;\r\n        const html = `\r\n            <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; color: #333;\">\r\n                <div style=\"background-color: #f8f9fa; padding: 20px; border-radius: 5px;\">\r\n                    <h2 style=\"color: #2c3e50;\">Welcome to Guardian Grove!</h2>\r\n                    <p>Hello ${req.user.name},</p>\r\n                    \r\n                    <div style=\"background-color: white; padding: 15px; border-radius: 5px; margin: 15px 0; border-left: 4px solid #3498db;\">\r\n                        <p>You've successfully created a <strong>${role}</strong> account for <strong>${name}</strong>.</p>\r\n                        <p>Here are the login details:</p>\r\n                        <table style=\"width: 100%; border-collapse: collapse;\">\r\n                            <tr>\r\n                                <td style=\"padding: 8px; border-bottom: 1px solid #ddd; width: 120px;\"><strong>Username:</strong></td>\r\n                                <td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style=\"padding: 8px;\"><strong>Temporary Password:</strong></td>\r\n                                <td style=\"padding: 8px;\">${generatedPassword}</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    \r\n                    <p style=\"color: #e74c3c; font-weight: bold;\">Please change this password after first login.</p>\r\n                    \r\n                    <p>If you didn't request this account creation, please contact our support immediately.</p>\r\n                    \r\n                    <div style=\"margin-top: 20px; padding-top: 20px; border-top: 1px solid #eee;\">\r\n                        <p>Best regards,</p>\r\n                        <p><strong>The Guardian Grove Team</strong></p>\r\n                        <p style=\"font-size: 12px; color: #7f8c8d;\">This is an automated message - please do not reply directly to this email.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        // Send email with the temporary password\r\n        await sendMail(from, to, subject, html);\r\n\r\n        await user.save();\r\n        res.status(200).send({ message: \"User created successfully, password email sent.\", user });\r\n    }catch(error){\r\n        if (error instanceof Error) {\r\n            // Handle MongoDB duplicate key error (11000)\r\n            if ((error as any).code === 11000) {\r\n                return throwError({ \r\n                    message: \"A user with this name and email already exists.\", \r\n                    res, \r\n                    status: 409 \r\n                });\r\n            } else {\r\n                return throwError({ message: error.message, res, status: 500 });\r\n            }\r\n        } else {\r\n            return throwError({ message: \"An unknown error occurred.\", res, status: 500 });\r\n        }    \r\n    } \r\n};\r\n\r\n// API to edit user profile\r\nexport const editUserProfile = async(req: CustomRequest, res: Response):Promise<void> => {\r\n    try{\r\n        const {userId, name, birthday, gender, avatar, role} = req.body;\r\n\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401 });\r\n        }\r\n\r\n        if ((role) && !['parent', 'admin', 'owner'].includes(req.user.role)) {\r\n            return throwError({ message: \"Forbidden: You cannot change role nor email\", res, status: 403 });\r\n        }\r\n\r\n        let user;\r\n\r\n        if(userId){\r\n            if(!checkId({id: userId, res})) return;\r\n            if (req.user._id.toString() !== userId && !['parent', 'admin', 'owner'].includes(req.user.role)) {\r\n                return throwError({ message: \"Forbidden\", res, status: 403 });\r\n            }\r\n\r\n            user = await User.findById(userId);\r\n\r\n            if (!user){\r\n                return throwError({ message: \"User not found\", res, status: 404});\r\n            }\r\n\r\n            if(req.user.role !== \"admin\" && req.user.email !== user.email){\r\n                return throwError({ message: \"Forbidden\", res, status: 403 });\r\n            }\r\n        }\r\n        else{\r\n            user = req.user;\r\n        }\r\n\r\n        // Check if a user with the same email and name exists\r\n        if (name) {\r\n            const existingUser = await User.findOne({ email: user.email, name, _id: { $ne: user._id } });\r\n            if (existingUser) {\r\n                return throwError({ message: \"A user with the same email and name already exists.\", res, status: 400 });\r\n            }\r\n            user.name = name;\r\n        }\r\n\r\n        if (name) user.name = name;\r\n        if (birthday) user.birthday = birthday;\r\n        if (gender) user.gender = gender;\r\n        if (avatar) user.avatar = avatar;\r\n        if (role) user.role = role; \r\n\r\n        await user.save();\r\n\r\n        res.status(200).send({message: \"User profile updated successfully\", user});\r\n    }catch(error){\r\n        return throwError({ message: \"Failed to update. An unknown error occurred.\", res, status: 500 });\r\n    }\r\n}\r\n\r\n// API to delete user\r\nexport const deleteUser = async(req: CustomRequest, res:Response):Promise<void> => {\r\n    try{\r\n        const {userId} = req.body;\r\n\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401 });\r\n        }\r\n\r\n        let user;\r\n        if(userId){\r\n            if(!checkId({id: userId, res})) return;\r\n            if (req.user._id.toString() !== userId && !['parent', 'admin', 'owner'].includes(req.user.role)) {\r\n                return throwError({ message: \"Forbidden\", res, status: 403 });\r\n            }\r\n\r\n            user = await User.findById(userId);\r\n\r\n            if (!user){\r\n                return throwError({ message: \"User not found\", res, status: 404});\r\n            }\r\n\r\n            if(req.user.role !== \"admin\" && req.user.email !== user.email){\r\n                return throwError({ message: \"Forbidden\", res, status: 403 });\r\n            }\r\n        }\r\n        else{\r\n            user = req.user;\r\n        }\r\n\r\n\r\n        // Prevent deleting the last parent in a family\r\n        const family = await Family.findById(user.familyId);\r\n        if (family) {\r\n            const parentsCount = await User.countDocuments({ familyId: family._id, role: 'parent' });\r\n            if (user.role === 'parent' && parentsCount <= 1) {\r\n                return throwError({ message: \"Cannot delete the last parent in the family\", res, status: 400 });\r\n            }\r\n\r\n            // Remove user from the family members list\r\n            family.members = family.members.filter((member) => member._id.toString() !== user._id.toString());\r\n            await family.save();\r\n        }\r\n\r\n        // Delete the user\r\n        await User.findByIdAndDelete(user._id);\r\n      \r\n        res.status(200).send({message: \"User deleted successfully\", user});\r\n    }catch(error){\r\n        return throwError({ message: \"Failed to delete. An unknown error occurred.\", res, status: 500 });\r\n    }\r\n} \r\n\r\n// API to update password\r\nexport const updatePassword = async (req: CustomRequest, res: Response): Promise<void> => {\r\n    try {\r\n        const {userId, oldPassword, newPassword, confirmPassword } = req.body;\r\n        \r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401 });\r\n        }\r\n\r\n        let user;\r\n\r\n        if(userId){\r\n            if(!checkId({id: userId, res})) return;\r\n            if (req.user._id.toString() !== userId && req.user.role !== \"admin\") {\r\n                return throwError({ message: \"Forbidden\", res, status: 403 });\r\n            }\r\n\r\n            user = await User.findById(userId);\r\n\r\n            if (!user){\r\n                return throwError({ message: \"User not found\", res, status: 404});\r\n            }\r\n        }\r\n        else{\r\n            user = req.user;\r\n        }\r\n\r\n        // Validate required fields\r\n        if (!oldPassword || !newPassword || !confirmPassword) {\r\n            return throwError({ message: \"All fields are required.\", res, status: 400 });\r\n        }\r\n\r\n        if (newPassword !== confirmPassword) {\r\n            return throwError({ message: \"Passwords do not match.\", res, status: 400 });\r\n        }\r\n\r\n        // Verify old password\r\n        const isMatch = await bcrypt.compare(oldPassword, user.password);\r\n        if (!isMatch) {\r\n            return throwError({ message: \"Old password is incorrect.\", res, status: 400 });\r\n        }\r\n\r\n        // Check if the new password is different from the old one\r\n        const isSamePassword = await bcrypt.compare(newPassword, req.user.password);\r\n        if (isSamePassword) {\r\n            return throwError({ message: \"New password cannot be the same as the old password.\", res, status: 400 });\r\n        }\r\n\r\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n        if (!passwordRegex.test(newPassword)) {\r\n            return throwError({\r\n                message: \"Password must be at least 8 characters long, include an uppercase letter, lowercase letter, a number, and a special character.\",\r\n                res,\r\n                status: 400\r\n            });\r\n        }\r\n\r\n        // Hash new password\r\n        const hashedPassword = await bcrypt.hash(newPassword, 10);\r\n        user.password = hashedPassword;\r\n        user.isTempPassword = false;\r\n        await user.save();\r\n\r\n        // Return success response\r\n        res.status(200).send({ message: \"Password updated successfully.\", password: newPassword });\r\n\r\n    } catch (error) {\r\n        return throwError({ message: \"Failed to update password.\", res, status: 500 });\r\n    }\r\n};\r\n\r\n// API to get user's stars\r\nexport const getUserStars = async(req:CustomRequest, res: Response): Promise<void> => {\r\n    try{\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401});\r\n        }\r\n\r\n        res.status(200).send({message:\"Stars retrieved successfully\", stars: req.user.stars});\r\n\r\n    }catch(error){\r\n        return throwError({ message: \"Error retrieving user stars\", res, status: 500});\r\n    }\r\n} \r\n\r\n// API to update user's stars\r\nexport const updateUserStars = async(req:CustomRequest, res: Response): Promise<void> => {\r\n    try{\r\n        const { stars }: { stars: number } = req.body;\r\n\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401});\r\n        }\r\n\r\n        if (stars === undefined || typeof stars !== \"number\" || stars < 0){\r\n            return throwError({ message: \"Stars must be a valid number.\", res, status: 400});\r\n        }\r\n\r\n        req.user.stars += stars;\r\n        await req.user.save();\r\n\r\n        if(!req.user.familyId){\r\n            return throwError({ message: \"No family id\", res, status: 400});\r\n        }\r\n        await Family.findByIdAndUpdate(req.user.familyId, { $inc: { totalStars: stars } });\r\n        \r\n        await recalculateFamilyMemberRanks(req.user.familyId, req.user);\r\n\r\n        res.status(200).send({ message: \"User stars updated successfully\", user: req.user });\r\n    }catch(error){\r\n        return throwError({ message: \"Error updating user stars\", res, status: 500});\r\n    }\r\n} \r\n\r\n// API to get user's coins\r\nexport const getUserCoins = async(req:CustomRequest, res: Response): Promise<void> => {\r\n    try{\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401});\r\n        }\r\n\r\n        res.status(200).send({message:\"Coins retrieved successfully\", coins: req.user.coins});\r\n    }catch(error){\r\n        return throwError({ message: \"Error retrieving user coins\", res, status: 500});\r\n    }\r\n} \r\n\r\n// API to update user's coins\r\nexport const updateUserCoins = async(req:CustomRequest, res: Response): Promise<void> => {\r\n    try{\r\n        const { coins }: { coins: number } = req.body;\r\n\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401});\r\n        }\r\n\r\n        if (coins === undefined || typeof coins !== \"number\"){\r\n            return throwError({ message: \"Stars must be a valid number.\", res, status: 400});\r\n        }\r\n\r\n        req.user.coins += coins;\r\n        await req.user.save();\r\n\r\n        res.status(200).send({ message: \"User coins updated successfully\", user: req.user });\r\n    }catch(error){\r\n        return throwError({ message: \"Error updating user coins\", res, status: 500});\r\n    }\r\n} \r\n\r\n\r\n// API to get user's location\r\nexport const getLocation = async(req:CustomRequest, res: Response): Promise<void> => {\r\n    try{\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401});\r\n        }\r\n\r\n        res.status(200).send({message:\"Location retrieved successfully\", location: req.user.currentLocation});\r\n\r\n    }catch(error){\r\n        return throwError({ message: \"Error retrieving user location\", res, status: 500});\r\n    }\r\n} \r\n\r\n// API to update user's current location\r\nexport const updateLocation = async(req:CustomRequest, res: Response): Promise<void> => {\r\n    try{\r\n        const { currentLocation }: { currentLocation: string } = req.body;\r\n\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401});\r\n        }\r\n\r\n        if (typeof currentLocation !== \"string\" || currentLocation.trim() === \"\"){\r\n            return throwError({ message: \"Location must be valid.\", res, status: 400});\r\n        }\r\n\r\n        req.user.currentLocation = currentLocation;\r\n        await req.user.save();\r\n\r\n        res.status(200).send({ message: \"User location updated successfully\", user: req.user });\r\n    }catch(error){\r\n        return throwError({ message: \"Error updating user location\", res, status: 500});\r\n    }\r\n}  \r\n\r\n// API to get user's rank\r\nexport const getUserRank = async(req:CustomRequest, res: Response): Promise<void> => {\r\n    try{\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401});\r\n        }\r\n\r\n        res.status(200).send({message:\"Rank retrieved successfully\", Rank: req.user.rankInFamily});\r\n    }catch(error){\r\n        return throwError({ message: \"Error retrieving user rank\", res, status: 500});\r\n    }\r\n};\r\n\r\n// API to update user's rank\r\n/*export const updateUserRank = async(req:CustomRequest, res: Response): Promise<void> => {\r\n    try{\r\n        const { rank }: { rank: number } = req.body;\r\n\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401});\r\n        }\r\n\r\n        if (rank === undefined || typeof rank !== \"number\"){\r\n            return throwError({ message: \"Rank must be a valid number.\", res, status: 400});\r\n        }\r\n\r\n        req.user.rankInFamily = rank;\r\n        await req.user.save();\r\n\r\n        res.status(200).send({ message: \"User rank updated successfully\", user: req.user });\r\n    }catch(error){\r\n        return throwError({ message: \"Error updating user rank\", res, status: 500});\r\n    }\r\n};*/\r\n\r\n// API to get user's interesets\r\nexport const getUserInterests = async(req:CustomRequest, res: Response): Promise<void> => {\r\n    try{\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401});\r\n        }\r\n\r\n        res.status(200).send({ message: \"Interests retrieved successfully\", Interests: req.user.interests});\r\n    }catch(error){\r\n        throwError({ message: \"Error retrieving user interests\", res, status: 500});\r\n    }\r\n};\r\n\r\n// API to start an adventure\r\nexport const startAdventure = async (req: CustomRequest, res: Response): Promise<void> => {\r\n    try {\r\n        const {adventureId} = req.body;\r\n\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401 });\r\n        }\r\n\r\n        const userId = req.user._id;\r\n\r\n        if(!checkId({id: adventureId, res})) return;\r\n        if(!checkId({id: userId.toString(), res})) return;\r\n\r\n        // Find the adventure by adventureId\r\n        const adventure = await Adventure.findById(adventureId);\r\n        if (!adventure) {\r\n            return throwError({ message: \"Adventure not found\", res, status: 404 });\r\n        }\r\n\r\n        const existingAdventureProgress = req.user.adventures.find(\r\n            (adventureProgress) => \r\n                adventureProgress.adventureId.equals(adventureId)\r\n        );\r\n        if (existingAdventureProgress) {\r\n            return throwError({ message: \"Adventure already started\", res, status: 400 });\r\n        }\r\n\r\n        // Add adventure to user's adventures\r\n        const newAdventureProgress : IAdventureProgress = {\r\n            adventureId: adventureId,\r\n            challenges: adventure.challenges.map((challenge) => ({\r\n                challengeId: challenge._id,\r\n                isCompleted: false,  \r\n            })),\r\n            status: \"in-progress\",\r\n            isAdventureCompleted: false,\r\n            starsReward: adventure.starsReward,\r\n            coinsReward: adventure.coinsReward,\r\n            progress: 0,\r\n        };\r\n\r\n        req.user.adventures.push(newAdventureProgress);\r\n        await req.user.save();\r\n\r\n        res.status(200).send({ message: \"Adventure started successfully\", user: req.user });\r\n\r\n    } catch (error) {\r\n        return throwError({ message: \"An unknown error occurred while starting the adventure.\", res, status: 500 });\r\n    }\r\n};\r\n\r\nexport const completeChallenge = async (req: CustomRequest, res: Response): Promise<void> => {\r\n    try {\r\n        const { adventureId, challengeId } = req.body;\r\n\r\n        if (!checkId({ id: adventureId, res })) return;\r\n        if (!checkId({ id: challengeId, res })) return;\r\n\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401 });\r\n        }\r\n\r\n        const user = req.user;\r\n        const adventureProgress = user.adventures.find(\r\n            (adventure) => adventure.adventureId.equals(adventureId)\r\n        );\r\n        if (!adventureProgress) {\r\n            return throwError({ message: \"Adventure not found in user's profile\", res, status: 404 });\r\n        }\r\n\r\n        const challenge = adventureProgress.challenges.find(\r\n            (challenge) => challenge.challengeId.equals(challengeId)\r\n        );\r\n        if (!challenge) {\r\n            return throwError({ message: \"Challenge not found in adventure\", res, status: 404 });\r\n        }\r\n\r\n        // Fetch the full adventure to get challenge rewards\r\n        const adventure = await Adventure.findById(adventureId).lean();\r\n\r\n        if (!adventure) {\r\n            return throwError({ message: \"Adventure not found\", res, status: 404 });\r\n        }\r\n\r\n        const targetChallenge = adventure.challenges.find(ch =>\r\n            ch._id.equals(challengeId)\r\n        );\r\n\r\n        if (!targetChallenge) {\r\n            return throwError({ message: \"Challenge data not found in adventure\", res, status: 404 });\r\n        }\r\n\r\n        // Mark challenge as complete and add rewards\r\n        challenge.isCompleted = true;\r\n        challenge.completedAt = new Date();\r\n\r\n        const starsReward = targetChallenge.starsReward;\r\n        const coinsReward = targetChallenge.coinsReward;\r\n\r\n        user.stars += starsReward;\r\n        user.coins += coinsReward;\r\n\r\n        adventureProgress.progress = (adventureProgress.challenges.filter(challenge => challenge.isCompleted).length / adventureProgress.challenges.length) * 100;\r\n\r\n        let adventureStars = 0;\r\n        if (adventureProgress.progress === 100) {\r\n            adventureProgress.isAdventureCompleted = true;\r\n            adventureProgress.status = 'completed';\r\n            adventureStars = adventureProgress.starsReward;\r\n\r\n            user.coins += adventureProgress.coinsReward;\r\n            user.stars += adventureStars;\r\n        }\r\n\r\n        // Update the family total stars\r\n        if (user.familyId) {\r\n            const totalStars = starsReward + adventureStars;\r\n            await Family.findByIdAndUpdate(user.familyId, {\r\n                $inc: { totalStars: totalStars }\r\n            });\r\n            await recalculateFamilyMemberRanks(user.familyId, user);\r\n        }\r\n\r\n        await user.save();\r\n\r\n        res.status(200).json({ message: \"Challenge completed successfully\", adventureProgress });\r\n\r\n    } catch (error) {\r\n        return throwError({ message: \"An unknown error occurred while completing the challenge.\", res, status: 500 });\r\n    }\r\n};\r\n\r\n// API to get user's adventures\r\nexport const getUserAdventures = async(req:CustomRequest, res: Response): Promise<void> => {\r\n    try{\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401});\r\n        }\r\n\r\n        res.status(200).send({ message: \"User adventures retrieved successfully\", Adventure: req.user.adventures});\r\n    }catch(error){\r\n        return throwError({ message: \"Error retrieving user adventures\", res, status: 500});\r\n    }\r\n};\r\n\r\n//API to get user's purchased items\r\nexport const getUserPurchasedItems = async (req: CustomRequest, res: Response): Promise<void> => {\r\n    try {\r\n        const { userId } = req.body;\r\n\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401 });\r\n        }\r\n\r\n        const targetUserId = userId || req.user._id;\r\n\r\n        if (!checkId({ id: targetUserId, res })) return;\r\n\r\n        const isAuthorized = req.user._id.toString() === targetUserId.toString();\r\n        if (!isAuthorized) {\r\n            return throwError({ message: \"Forbidden\", res, status: 403 });\r\n        }\r\n\r\n        // Fetch only itemIds from purchasedItems\r\n        const user = await User.findById(targetUserId).select('purchasedItems.itemId');\r\n\r\n        if (!user) {\r\n            return throwError({ message: \"User not found\", res, status: 404 });\r\n        }\r\n\r\n        const purchasedItemIds = user.purchasedItems.map((item: any) => item.itemId);\r\n\r\n        res.status(200).json({ message: \"Purchased items retrieved successfully\", purchasedItems: purchasedItemIds });\r\n    } catch (error) {\r\n        return throwError({ message: \"Error retrieving purchased items\", res, status: 500 });\r\n    }\r\n};\r\n\r\n//API to get user's avatar\r\nexport const getUserAvatar = async (req: CustomRequest, res: Response) => {\r\n    try {\r\n\r\n        if (!req.user) {\r\n            return throwError({ message: \"Unauthorized\", res, status: 401});\r\n        }\r\n\r\n        const user = req.user;\r\n\r\n        res.status(200).json({message: \"Avatar retrieved successfully\", avatar: user.avatar });\r\n    } catch (error) {\r\n        return throwError({ message: \"Error fetching avatar\", res, status: 500});\r\n    }\r\n};"],"version":3}