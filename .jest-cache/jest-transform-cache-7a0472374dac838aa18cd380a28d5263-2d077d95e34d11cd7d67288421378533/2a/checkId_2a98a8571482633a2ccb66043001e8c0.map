{"file":"C:\\Users\\USER\\Desktop\\guardian-grove\\guardian-grove-backend\\src\\utils\\checkId.ts","mappings":";;;;;;AACA,mCAAqC;AACrC,wDAAgC;AAOzB,MAAM,OAAO,GAAG,CAAC,EAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAS,EAAW,EAAE;IACtD,IAAG,CAAC,EAAE,EAAC,CAAC;QACJ,IAAA,kBAAU,EAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAC,CAAC,CAAC;QAC3D,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,IAAI,CAAC,kBAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC;QACvC,IAAA,kBAAU,EAAC,EAAE,OAAO,EAAE,wBAAwB,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAC,CAAC,CAAC;QACnE,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AAZW,QAAA,OAAO,WAYlB","names":[],"sources":["C:\\Users\\USER\\Desktop\\guardian-grove\\guardian-grove-backend\\src\\utils\\checkId.ts"],"sourcesContent":["import { Response } from 'express';\r\nimport { throwError } from './error';\r\nimport mongoose from 'mongoose';\r\n\r\ninterface CheckId {\r\n  id: string;\r\n  res: Response;\r\n}\r\n\r\nexport const checkId = ({id: id, res}:CheckId): boolean => {\r\n    if(!id){ \r\n        throwError({ message: \"Id is required\", res, status: 400}); \r\n        return false;\r\n    }\r\n\r\n    if (!mongoose.Types.ObjectId.isValid(id)) {\r\n        throwError({ message: \"Invalid user ID format\", res, status: 400});\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n"],"version":3}