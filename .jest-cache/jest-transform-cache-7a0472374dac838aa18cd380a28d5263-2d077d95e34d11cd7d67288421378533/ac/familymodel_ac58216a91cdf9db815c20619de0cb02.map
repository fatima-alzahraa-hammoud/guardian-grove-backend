{"file":"C:\\Users\\USER\\Desktop\\guardian-grove\\guardian-grove-backend\\src\\models\\family.model.ts","mappings":"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","names":[],"sources":["C:\\Users\\USER\\Desktop\\guardian-grove\\guardian-grove-backend\\src\\models\\family.model.ts"],"sourcesContent":["import { Schema, model, Types } from \"mongoose\";\r\nimport { IFamily } from \"../interfaces/IFamily\";\r\nimport { User } from \"./user.model\";\r\nimport { goalSchema } from \"./schemas/goal.schema\";\r\nimport { notificationSchema } from \"./schemas/notification.schema\";\r\nimport { unlockedAchievementSchema } from \"./schemas/unlockedAchievementSchema.schema\";\r\nimport { storySchema } from \"./schemas/story.schema\";\r\n\r\nconst familySchema = new Schema<IFamily>({\r\n    _id: { type: Schema.Types.ObjectId, auto: true },\r\n    familyName: { type: String, required: true, unique: true },\r\n    members: [\r\n        {\r\n            _id: { type: Types.ObjectId, ref: \"User\", required: true },\r\n            name: { type: String, required: true },\r\n            role: { type: String, required: true, enum: ['parent', 'admin', 'child'] },\r\n            gender: { type: String, required: true, enum: ['female', 'male'] },\r\n            avatar: { type: String, required: true },\r\n        },\r\n    ],\r\n    email: { type: String, required: true, unique: true },\r\n    createdAt: { type: Date, required: true },\r\n    totalStars: { type: Number, default: 0 },\r\n    tasks: { type: Number, default: 0 },\r\n    notifications: { type: [notificationSchema], default: [] },\r\n    goals: { type: [goalSchema], default: [] },\r\n    achievements: { type: [unlockedAchievementSchema], default: [] },\r\n    stars: {\r\n        daily: { type: Number, default: 0 },\r\n        weekly: { type: Number, default: 0 },\r\n        monthly: { type: Number, default: 0 },\r\n        yearly: { type: Number, default: 0 }\r\n    },\r\n    taskCounts: {\r\n        daily: { type: Number, default: 0 },\r\n        weekly: { type: Number, default: 0 },\r\n        monthly: { type: Number, default: 0 },\r\n        yearly: { type: Number, default: 0 }\r\n    },\r\n    familyAvatar: { type: String, required: true },\r\n    sharedStories: { type: [storySchema], default: [] },\r\n});\r\n\r\n// Ensure virtuals are included in JSON response\r\nfamilySchema.set(\"toJSON\", { virtuals: true });\r\nfamilySchema.set(\"toObject\", { virtuals: true });\r\n\r\nexport const Family = model<IFamily>(\"Family\", familySchema);\r\n"],"version":3}